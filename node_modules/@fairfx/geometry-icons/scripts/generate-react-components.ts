import svgr from "@svgr/core";
import { camelCase, upperFirst } from "lodash";
import { writeFile, readdir, readFile } from "fs-extra";
import { OUTPUT_DIR } from "./constants";

export const createComponents = async () => {
  readdir(`${OUTPUT_DIR}/images/web`, async (err, filenames) => {
    if (err) {
      console.error(err);
      return;
    }

    const exportLines: any[] = [];

    await Promise.all(
      filenames.map((filename) => {
        // There's an icon called `delete` which is hilarious. 'Cause JS interprates
        // it as a keyword. So I'm prefixing all names just to be sure.
        const safeName = "icon " + filename;

        const name = camelCase(safeName.replace(".svg", ""));
        const pascalName = upperFirst(name);

        exportLines.push(
          `export { default as ${pascalName} } from "./components/${name}";`
        );

        readFile(`${OUTPUT_DIR}/images/web/` + filename, "utf-8", (err, content) => {
          if (err) {
            console.error(err);
            return;
          }

          return svgr(
            content,
            {
              icon: false,
              typescript: true
            },
            { componentName: pascalName }
          )
            .then((jsCode: any) => {
              writeFile(`${OUTPUT_DIR}/components/${name}.tsx`, jsCode);
            })
            .catch((err) => console.error(err));
        });
      })
    ).then(() => {
      console.log(exportLines);
      const contents = `
        /*
        THIS IS A GENERATED FILE.
        */
        
        ${exportLines.join("\n")}
        `;
      writeFile(`${OUTPUT_DIR}/web.ts`, contents);
    });
  });
};

export const generateReactComponents = async () => {
  await createComponents();
};
