import { colorPalette } from '@fairfx/geometry-palette';
import { ColorValue } from '@fairfx/geometry-palette/build/types/models';
import { SideBarNavigation } from '../components/sideBarNavigation/SideBarNavigation.context';
import { SpinnerTheme } from '../components/spinner/Spinner.context';
import { ActionColorContext, BaseColorContext, TypographyColorContext } from './models.base';
import { tokens } from './tokens';
declare type ColorPalette = typeof colorPalette;
export interface ColorContexts {
    input: {
        background: BaseColorContext;
        border: BaseColorContext;
        label: BaseColorContext;
        outerLabel: BaseColorContext;
        icon: BaseColorContext;
    };
    spinner: SpinnerTheme;
    /**
     * Typographic colours, primary is to be used in most cases such as titles and
     * paragraphs secondary can be used for typographic elements such as subtitles
     * or input descriptions.
     */
    typography?: TypographyColorContext;
    /**
     * Action colours are to be used for all links, buttons and call-to-actions.
     */
    actions?: {
        border: {
            primary: ActionColorContext;
            secondary: ActionColorContext;
            tertiary: ActionColorContext;
        };
        background: {
            primary: ActionColorContext;
            secondary: ActionColorContext;
            tertiary: ActionColorContext;
            link: ActionColorContext;
        };
        foreground: {
            primary: ActionColorContext;
            secondary: ActionColorContext;
            tertiary: ActionColorContext;
            link: ActionColorContext;
        };
    };
    /**
     * Generic error and success states
     */
    states?: {
        error: BaseColorContext;
        loading: BaseColorContext;
    };
    /**
     * Transactions and related
     */
    transactions?: {
        [key: string]: ColorValue;
    };
    /**
     * Navigation
     */
    navigation: {
        sidebar: SideBarNavigation;
    };
}
declare type Tokens = typeof tokens;
export interface Theme extends Tokens {
    palette: ColorPalette;
    context: {
        colors: ColorContexts;
    };
}
export interface ThemeProviderProps {
    theme?: Theme;
}
export {};
