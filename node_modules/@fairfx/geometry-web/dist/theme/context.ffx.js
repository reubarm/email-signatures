"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fairFXTheme = void 0;
const geometry_palette_1 = require("@fairfx/geometry-palette");
const SideBarNavigation_context_1 = require("../components/sideBarNavigation/SideBarNavigation.context");
const Spinner_context_1 = require("../components/spinner/Spinner.context");
const tokens_1 = require("./tokens");
const fairFXContext = {
    input: {
        background: {
            default: geometry_palette_1.colorPalette.grey[0],
            focused: geometry_palette_1.colorPalette.white[0],
            error: geometry_palette_1.colorPalette.red[0],
            complete: geometry_palette_1.colorPalette.grey[0],
            disabled: geometry_palette_1.colorPalette.grey[1],
        },
        border: {
            default: geometry_palette_1.colorPalette.grey[5],
            focused: geometry_palette_1.colorPalette.skyBlue[8],
            error: geometry_palette_1.colorPalette.red[1],
            complete: geometry_palette_1.colorPalette.midnightBlue[0],
        },
        label: {
            default: geometry_palette_1.colorPalette.grey[6],
            focused: geometry_palette_1.colorPalette.grey[6],
            complete: geometry_palette_1.colorPalette.grey[6],
            error: geometry_palette_1.colorPalette.red[1],
            disabled: geometry_palette_1.colorPalette.grey[4],
        },
        outerLabel: {
            default: geometry_palette_1.colorPalette.midnightBlue[0],
            focused: geometry_palette_1.colorPalette.midnightBlue[0],
            complete: geometry_palette_1.colorPalette.midnightBlue[0],
            error: geometry_palette_1.colorPalette.midnightBlue[0],
        },
        icon: {
            default: geometry_palette_1.colorPalette.midnightBlue[0],
            focused: geometry_palette_1.colorPalette.midnightBlue[0],
            complete: geometry_palette_1.colorPalette.midnightBlue[0],
            error: geometry_palette_1.colorPalette.midnightBlue[0],
        },
    },
    typography: {
        primary: geometry_palette_1.colorPalette.midnightBlue[0],
        secondary: geometry_palette_1.colorPalette.grey[0],
        tertiary: geometry_palette_1.colorPalette.grey[6],
        inverse: geometry_palette_1.colorPalette.grey[3],
        link: geometry_palette_1.colorPalette.skyBlue[7],
        error: geometry_palette_1.colorPalette.red[1],
        white: geometry_palette_1.colorPalette.white[0],
        success: geometry_palette_1.colorPalette.green[0],
        mango: geometry_palette_1.colorPalette.mango[0],
    },
    actions: {
        border: {
            primary: {
                default: '',
                hover: '',
                focused: '',
                error: '',
                complete: '',
                disabled: '',
            },
            secondary: {
                default: geometry_palette_1.colorPalette.skyBlue[8],
                focused: geometry_palette_1.colorPalette.skyBlue[8],
                hover: geometry_palette_1.colorPalette.skyBlue[6],
                error: '',
                complete: '',
                disabled: geometry_palette_1.colorPalette.grey[6],
            },
            tertiary: {
                default: '',
                focused: '',
                error: '',
                complete: '',
                hover: '',
                disabled: '',
            },
        },
        background: {
            primary: {
                default: geometry_palette_1.colorPalette.skyBlue[8],
                focused: geometry_palette_1.colorPalette.skyBlue[8],
                disabled: geometry_palette_1.colorPalette.grey[2],
                loading: geometry_palette_1.colorPalette.grey[2],
                error: '',
                complete: geometry_palette_1.colorPalette.skyBlue[8],
                hover: geometry_palette_1.colorPalette.skyBlue[7],
            },
            secondary: {
                default: 'transparent',
                focused: 'transparent',
                disabled: 'transparent',
                loading: 'transparent',
                error: '',
                complete: '',
            },
            tertiary: {
                default: 'transparent',
                focused: '',
                error: '',
                complete: '',
                hover: '',
            },
            link: {
                default: 'transparent',
                focused: 'transparent',
                disabled: 'transparent',
                loading: 'transparent',
                error: '',
                complete: '',
            },
        },
        foreground: {
            primary: {
                default: geometry_palette_1.colorPalette.white[0],
                hover: geometry_palette_1.colorPalette.white[0],
                focused: '',
                error: '',
                complete: '',
                disabled: geometry_palette_1.colorPalette.midnightBlue[0],
            },
            secondary: {
                default: geometry_palette_1.colorPalette.skyBlue[8],
                focused: geometry_palette_1.colorPalette.skyBlue[8],
                hover: geometry_palette_1.colorPalette.skyBlue[6],
                error: geometry_palette_1.colorPalette.red[1],
                complete: '',
                disabled: geometry_palette_1.colorPalette.grey[6],
            },
            tertiary: {
                default: geometry_palette_1.colorPalette.skyBlue[9],
                focused: '',
                error: '',
                complete: '',
                hover: geometry_palette_1.colorPalette.skyBlue[9],
                disabled: geometry_palette_1.colorPalette.grey[6],
            },
            link: {
                default: geometry_palette_1.colorPalette.red[0],
                focused: '',
                error: '',
                complete: '',
                disabled: geometry_palette_1.colorPalette.midnightBlue[0],
            },
        },
    },
    spinner: Spinner_context_1.spinnerFFX,
    navigation: {
        sidebar: SideBarNavigation_context_1.sideBarNavigationFFX,
    },
};
exports.fairFXTheme = Object.assign(Object.assign({}, tokens_1.tokens), { palette: geometry_palette_1.colorPalette, context: {
        colors: fairFXContext,
    } });
//# sourceMappingURL=context.ffx.js.map