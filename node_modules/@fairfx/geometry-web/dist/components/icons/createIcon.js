"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@emotion/core");
const is_prop_valid_1 = __importDefault(require("@emotion/is-prop-valid"));
const react_1 = __importDefault(require("react"));
const theme_1 = __importDefault(require("../../theme"));
const tokens_1 = require("../../themer/tokens");
const convertSize = (key) => {
    const result = {
        base: `${tokens_1.sizes[7]}px`,
        small: `${tokens_1.sizes[6]}px`,
        large: `${tokens_1.sizes[8]}px`,
        // TODO - move those as tokens if they are not icon specific ?
        xLarge: '40px',
        header: '18px',
        fluid: '100%',
    };
    return result[key];
};
const convertColor = (key) => {
    const colors = {
        alt: tokens_1.color.white.base.value,
        muted: tokens_1.color.casper.base.value,
        primary: tokens_1.color.purple.base.value,
        brand: tokens_1.color.mango.base.value,
    };
    return colors[key];
};
// eslint-disable-next-line react/display-name
const createIcon = Icon => ({ size = 'base', className, number, color, }) => {
    const convertedSize = convertSize(size);
    const IconRoot = theme_1.default(Icon, {
        shouldForwardProp: is_prop_valid_1.default,
    }) `
    width: ${p => p.width};
    height: ${p => p.height};
    ${({ customColor }) => customColor
        ? core_1.css `
            > * {
              fill: ${customColor};
            }
          `
        : ''}
  `;
    return (react_1.default.createElement(IconRoot, { className: className, width: convertedSize, height: convertedSize, customColor: color ? convertColor(color) : undefined, number: number }));
};
exports.default = createIcon;
//# sourceMappingURL=createIcon.js.map