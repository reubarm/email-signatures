"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
const sharedBodyStyle = {
    textAlign: 'left',
    fontSize: 'body',
    fontWeight: 'body',
    color: 'dark',
};
const sharedHeadingStyle = {
    textAlign: 'left',
    fontWeight: 'heading',
    fontSize: 'h1',
    color: 'dark',
};
const styles = {
    p: sharedBodyStyle,
    body: sharedBodyStyle,
    div: sharedBodyStyle,
    span: sharedBodyStyle,
    small: Object.assign(Object.assign({}, sharedBodyStyle), { fontSize: 'small' }),
    large: Object.assign(Object.assign({}, sharedBodyStyle), { fontSize: 'small' }),
    cta: Object.assign(Object.assign({}, sharedBodyStyle), { fontSize: 'cta' }),
    placeholder: Object.assign(Object.assign({}, sharedBodyStyle), { fontSize: 'placeholder' }),
    label: Object.assign(Object.assign({}, sharedBodyStyle), { fontSize: 'label' }),
    h1: sharedHeadingStyle,
    h2: Object.assign(Object.assign({}, sharedHeadingStyle), { fontSize: 'h2' }),
    h3: Object.assign(Object.assign({}, sharedHeadingStyle), { fontSize: 'h3' }),
    h4: Object.assign(Object.assign({}, sharedHeadingStyle), { fontSize: 'h4' }),
};
const applyStyleAsDefaultsToProps = (_a) => {
    var { styleAs } = _a, rest = __rest(_a, ["styleAs"]);
    return Object.assign(Object.assign({ styleAs }, styles[styleAs]), rest);
};
exports.default = applyStyleAsDefaultsToProps;
//# sourceMappingURL=applyStyleAsDefaultsToProps.js.map