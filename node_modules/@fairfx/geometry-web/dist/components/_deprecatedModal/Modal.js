"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const react_dom_1 = __importDefault(require("react-dom"));
const Button_1 = require("../Button");
const Modal_components_1 = require("./Modal.components");
const retrieveDomElement = () => {
    if (typeof window !== 'undefined') {
        const rootContainer = document.createElement('div');
        const parentElem = document.querySelector('#modal-portal');
        if (parentElem) {
            parentElem.appendChild(rootContainer);
            return rootContainer;
        }
    }
    return undefined;
};
/**
 *  @deprecated Use PrimitiveModal instead
 */
const Modal = (props) => {
    const { isVisible, header, info, subheader, onAction, buttonText } = props;
    react_1.default.useEffect(() => {
        // eslint-disable-next-line no-console
        console.error('This component has been deprecated, please use Primitive Modal or ActionModal instead');
    }, []);
    if (!isVisible) {
        return null;
    }
    const container = retrieveDomElement();
    return container
        ? react_dom_1.default.createPortal(react_1.default.createElement(Modal_components_1.ModalContainer, { "data-testid": "modal" },
            react_1.default.createElement(Modal_components_1.ModalContent, null,
                react_1.default.createElement(Modal_components_1.HeaderWrapper, null, header && react_1.default.createElement(Modal_components_1.ModalHeader, null, header)),
                react_1.default.createElement(Modal_components_1.TextWrapper, null,
                    subheader && (react_1.default.createElement(Modal_components_1.SubheaderContainer, null,
                        react_1.default.createElement(Modal_components_1.ModalSubheader, null, subheader))),
                    Object.keys(info).map(key => (react_1.default.createElement(Modal_components_1.ModalInformation, { key: key },
                        react_1.default.createElement(Modal_components_1.ModalKey, null, `${key}: `),
                        react_1.default.createElement("span", null, info[key]))))),
                react_1.default.createElement(Button_1.PrimaryButton, { onClick: onAction, "data-testid": "modal-action" }, buttonText))), container)
        : null;
};
exports.default = Modal;
//# sourceMappingURL=Modal.js.map