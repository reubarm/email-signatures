"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SupportedModes = void 0;
const react_1 = __importDefault(require("react"));
const IconExit_1 = __importDefault(require("../icons/IconExit"));
const ToastManager_1 = require("../toast-manager/ToastManager");
const InspectorPanel_components_1 = require("./InspectorPanel.components");
const noop = () => { };
var SupportedModes;
(function (SupportedModes) {
    SupportedModes[SupportedModes["CLOSED"] = 0] = "CLOSED";
    SupportedModes[SupportedModes["OPENED"] = 1] = "OPENED";
})(SupportedModes = exports.SupportedModes || (exports.SupportedModes = {}));
const InspectorPanel = ({ title, id, mode = SupportedModes.CLOSED, customWidth, fullHeight = false, children, actions, onClose = noop, }) => {
    const inspectorMode = {
        [SupportedModes.CLOSED]: 'closed',
        [SupportedModes.OPENED]: 'opened',
    }[mode];
    const { empty } = ToastManager_1.useToasts();
    react_1.default.useEffect(() => {
        empty();
    }, [id]);
    // @TODO for Action. Create a component, and use in replacement of the divs that are passed in
    return (react_1.default.createElement(InspectorPanel_components_1.InspectorPanel, { customWidth: customWidth, mode: inspectorMode, "data-testid": "InspectorPanel", fullHeight: fullHeight },
        react_1.default.createElement(InspectorPanel_components_1.InspectorHeader, null,
            title,
            react_1.default.createElement(InspectorPanel_components_1.InspectorAction, { onClick: onClose },
                react_1.default.createElement(IconExit_1.default, { color: "alt" })),
            actions && (react_1.default.createElement(InspectorPanel_components_1.InspectorActions, null, actions.map(actionEl => (react_1.default.createElement(InspectorPanel_components_1.InspectorAction, Object.assign({ as: actionEl.type, key: actionEl.key }, actionEl.props, { sx: { variant: 'InspectorPanel.Action' } }))))))),
        react_1.default.createElement(InspectorPanel_components_1.InspectorBody, null, children)));
};
exports.default = InspectorPanel;
//# sourceMappingURL=InspectorPanel.js.map