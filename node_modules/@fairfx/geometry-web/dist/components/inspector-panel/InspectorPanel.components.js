"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InspectorBody = exports.InspectorActions = exports.InspectorAction = exports.InspectorHeader = exports.InspectorPanel = exports.InspectorPanelTitle = void 0;
const core_1 = require("@emotion/core");
const mediaQuery_1 = __importDefault(require("../../common/mediaQuery"));
const theme_1 = __importDefault(require("../../theme"));
const tokens_1 = require("../../themer/tokens");
const _deprecatedBox_1 = require("../layout/_deprecatedBox");
exports.InspectorPanelTitle = theme_1.default.div `
  width: 100%;
  padding: 0 ${tokens_1.sizes[7]}px;
`;
exports.InspectorPanel = theme_1.default.div `
  position: fixed;
  z-index: ${tokens_1.indices.inspectorPanel};
  background: ${tokens_1.color.white.base.value};
  max-width: 100%;
  width: 100%;
  top: 0;
  height: 100vh;
  ${mediaQuery_1.default.large_phone} {
    height: calc(100vh - ${tokens_1.sizes[10]}px);
    max-width: 460px;
    ${(props) => core_1.css `
        max-width: ${props.customWidth};
        height: 100%;
        top: ${props.fullHeight ? `0` : `${tokens_1.spaces[4] * 8 + 1}px`};
      `}
    z-index: ${tokens_1.indices.inspectorPanelMobile};
  }
  transition: all ${tokens_1.transition.base.value};
  display: flex;
  align-items: flex-start;
  flex-direction: column;

  box-shadow: ${tokens_1.color.boxShadow.base.value} -5px 0px 5px 0px;
  ${(props) => ({
    closed: core_1.css `
        right: -100%;
      `,
    opened: core_1.css `
        right: 0;
      `,
}[props.mode])}
},
`;
exports.InspectorHeader = theme_1.default(_deprecatedBox_1.Box) `
  display: flex;
  align-items: center;
  color: ${tokens_1.color.white.base.value};
  background: ${tokens_1.color.tuna.base.value};
  width: 100%;
`;
exports.InspectorAction = theme_1.default(_deprecatedBox_1.Box) `
  padding: ${tokens_1.sizes[8]}px;
  width: ${tokens_1.sizes[10]}px;
  height: ${tokens_1.sizes[10]}px;
  transition: all ${tokens_1.transition.base};
  cursor: pointer;

  &:hover {
    background: ${tokens_1.color.charcoal.base.value};
  }

  svg > * {
    fill: ${tokens_1.color.white.base.value};
  }

  &:hover svg > * {
    fill: ${tokens_1.color.white.base.value};
  }
`;
exports.InspectorActions = theme_1.default.div `
  display: flex;
`;
exports.InspectorBody = theme_1.default.div `
  width: 100%;
  flex-grow: 1;
  height: calc(100% - ${tokens_1.sizes[10]}px);
`;
//# sourceMappingURL=InspectorPanel.components.js.map