"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IconWrapper = exports.NavigationItemRoot = exports.Text = exports.Li = void 0;
const core_1 = require("@emotion/core");
const is_prop_valid_1 = __importDefault(require("@emotion/is-prop-valid"));
const theme_1 = __importDefault(require("../../theme"));
const tokens_1 = require("../../themer/tokens");
exports.Li = theme_1.default('li') `
  list-style-type: none;
`;
exports.Text = theme_1.default('span', {
    shouldForwardProp: is_prop_valid_1.default,
}) `
  box-sizing: border-box;
  overflow: hidden;
  padding-left: ${tokens_1.spaces[4]}px;
  width: 100%;
  font-weight: bold;
  user-select: none;
  font-size: ${tokens_1.fontSizes[3]}px;

  ${p => `color: ${p.isSelected
    ? p.theme.context.colors.navigation.sidebar.actions.text.focused
    : p.theme.context.colors.navigation.sidebar.actions.text.default}`}
`;
exports.NavigationItemRoot = theme_1.default('a', {
    shouldForwardProp: is_prop_valid_1.default,
}) `
  display: flex;
  align-items: center;
  position: relative;
  text-decoration: none;
  cursor: pointer;
  transition: all ${tokens_1.transition.base.value};

  &:hover {
    ${p => `
    .navigation-item-text {
      color: ${p.theme.context.colors.navigation.sidebar.actions.text.hover};
    }
    svg path {
      fill: ${p.theme.context.colors.navigation.sidebar.actions.text.hover};
    }
  `}
  }

  &:focus {
    box-shadow: 0 0 0 2px
      ${p => p.theme.context.colors.navigation.sidebar.actions.border.focused};
    outline: 0;
  }

  ${p => p.isSelected &&
    core_1.css `
        background-color ${p.theme.context.colors.navigation.sidebar.actions.background.focused};

        &:before {
          bottom: 0;
          content: "";
          display: block;
          height: 100%;
          position: absolute;
          left: 0;
          top: 0;
          transition: background-color ${tokens_1.transition.base.value};
          width: 4px;
          background-color: ${p.theme.context.colors.navigation.sidebar.actions.border.focused};
        }
      `}
`;
exports.IconWrapper = theme_1.default('div', {
    shouldForwardProp: prop => is_prop_valid_1.default(prop),
}) `
  width: ${tokens_1.sizes[10]}px;
  height: ${tokens_1.sizes[10]}px;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  display: flex;
  transition: color ${tokens_1.transition.base.value};
  ${p => `svg path {
      fill: ${p.isSelected
    ? p.theme.context.colors.navigation.sidebar.actions.icon.focused
    : p.theme.context.colors.navigation.sidebar.actions.icon.default};
    }`}
`;
//# sourceMappingURL=NavigationItem.components.js.map