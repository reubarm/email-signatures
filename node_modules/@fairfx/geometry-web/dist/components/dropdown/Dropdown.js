"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const IconPerson_1 = __importDefault(require("../icons/IconPerson"));
const _deprecatedBox_1 = require("../layout/_deprecatedBox");
const Text_1 = __importDefault(require("../typography/Text"));
const Dropdown_components_1 = require("./Dropdown.components");
const Dropdown = ({ text, hideText = undefined, children, }) => {
    const wrapperRef = react_1.useRef(null);
    const [activeDropdown, setActiveDropdown] = react_1.default.useState(false);
    const onClick = () => setActiveDropdown(!activeDropdown);
    const mainContent = (react_1.default.createElement(Dropdown_components_1.Main, null,
        react_1.default.createElement(Dropdown_components_1.Content, null,
            react_1.default.createElement(_deprecatedBox_1.Box, { display: "inline", alignContentX: "spaceBetween", alignContentY: "center", width: "full", bg: activeDropdown ? 'first' : undefined },
                react_1.default.createElement(Dropdown_components_1.Line, { isActive: activeDropdown }),
                react_1.default.createElement(Dropdown_components_1.TextWrapper, { hideText: hideText },
                    react_1.default.createElement(Text_1.default, { as: "div", color: "base" }, text)),
                react_1.default.createElement(IconPerson_1.default, { className: activeDropdown ? 'dropdownPersonActive' : 'dropdownPerson' }),
                react_1.default.createElement(Dropdown_components_1.Arrow, { isActive: activeDropdown })))));
    const handleClickOutside = (event) => {
        if (wrapperRef.current &&
            !wrapperRef.current.contains(event.target)) {
            setActiveDropdown(false);
        }
    };
    react_1.useEffect(() => {
        document.addEventListener('click', handleClickOutside, true);
        return () => {
            document.removeEventListener('click', handleClickOutside, true);
        };
    }, []);
    return (react_1.default.createElement(Dropdown_components_1.DropdownRoot, { "data-testid": "dropdown", onClick: onClick, onKeyDown: onClick, role: "menu", tabIndex: 0, ref: wrapperRef },
        mainContent,
        react_1.default.createElement(Dropdown_components_1.Collapsable, { isActive: activeDropdown }, children)));
};
exports.default = Dropdown;
//# sourceMappingURL=Dropdown.js.map