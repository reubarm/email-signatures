"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PasswordPanel = void 0;
const react_1 = __importDefault(require("react"));
const Tick_1 = __importDefault(require("../../icons/Tick"));
const useVariantModifier_1 = __importDefault(require("../shared/useVariantModifier"));
const PasswordPanel_components_1 = require("./PasswordPanel.components");
const minPasswordLengthDefault = 8;
const hasLowerCase = (str) => {
    return /[a-z]/.test(str);
};
const hasUpperCase = (str) => {
    return /[A-Z]/.test(str);
};
const hasNumber = (str) => {
    return /[0-9]/.test(str);
};
const hasGoodLength = (str, length) => {
    return str.length >= length ? 1 : 0;
};
const noop = () => { };
exports.PasswordPanel = ({ password = '', minPasswordLength = minPasswordLengthDefault, onFocus = noop, onBlur = noop, onChange = noop, isReadonly = false, value = '', isError = false, }) => {
    useVariantModifier_1.default({
        onBlur,
        onFocus,
        value,
        variant: 'Input',
        isError,
        isReadonly,
    });
    onChange(!!hasGoodLength(password, minPasswordLength) &&
        !!hasNumber(password) &&
        !!hasLowerCase(password) &&
        !!hasUpperCase(password));
    return (react_1.default.createElement(PasswordPanel_components_1.PasswordPanelRoot, null,
        react_1.default.createElement(PasswordPanel_components_1.Title, null, "Your password must have"),
        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,
            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasGoodLength(password, minPasswordLength) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),
            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: !!hasGoodLength(password, minPasswordLength) },
                minPasswordLength,
                " or more characters")),
        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,
            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasNumber(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),
            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasNumber(password) }, "Number")),
        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,
            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasLowerCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),
            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasLowerCase(password) }, "Lower case letters")),
        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,
            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasUpperCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),
            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasUpperCase(password) }, "Upper case letters"))));
};
exports.default = exports.PasswordPanel;
//# sourceMappingURL=PasswordPanel.js.map