import React from 'react';
interface UseVariantModifierReturnValue<T> {
    onUpdatedFocus: (e: React.FocusEvent<T>) => void;
    onUpdatedBlur: (e: React.FocusEvent<T>) => void;
    variant: string;
    isFocused: boolean;
}
declare const useVariantModifier: <T>({ onFocus, onBlur, variant, isReadonly, isError, value, }: {
    onFocus: (e: React.FocusEvent<T>) => void;
    onBlur: (e: React.FocusEvent<T>) => void;
    isReadonly: boolean;
    isError: boolean;
    variant: string;
    value: string;
}) => UseVariantModifierReturnValue<T>;
export default useVariantModifier;
