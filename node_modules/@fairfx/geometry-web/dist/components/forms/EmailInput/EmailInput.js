"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const Input_1 = __importDefault(require("../input/Input"));
const EmailInput = (_a) => {
    var { onChange = () => { }, large = false, isError = false } = _a, rest = __rest(_a, ["onChange", "large", "isError"]);
    const [value, setValue] = react_1.useState('');
    const [internalIsError, setIsError] = react_1.useState(isError);
    const handleChange = (e) => {
        const emailRegexp = /\S+@\S+\.\S+/g;
        const isValidEmail = emailRegexp.test(e.target.value);
        if (!isValidEmail) {
            setIsError(true);
        }
        else {
            setIsError(false);
            onChange(e);
        }
        setValue(e.target.value);
    };
    react_1.useEffect(() => {
        setIsError(isError);
    }, [isError]);
    return (react_1.default.createElement(Input_1.default, Object.assign({}, rest, { placeholder: "Email", large: large, onChange: handleChange, value: value, isError: internalIsError })));
};
exports.default = EmailInput;
//# sourceMappingURL=EmailInput.js.map