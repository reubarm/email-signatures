"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const lengthGtrThanZero_1 = __importDefault(require("../shared/lengthGtrThanZero"));
const useVariantModifier_1 = __importDefault(require("../shared/useVariantModifier"));
const Input_components_1 = require("./Input.components");
const noop = () => { };
const InputText = react_1.default.forwardRef((_a, ref) => {
    var { type = 'text', onFocus = noop, onBlur = noop, onChange = noop, prefix = '', placeholder = '', isError = false, isLocked = false, isReadonly = false, autoComplete = 'on', value, testId, name = '', rightAddon = null, large = false } = _a, rest = __rest(_a, ["type", "onFocus", "onBlur", "onChange", "prefix", "placeholder", "isError", "isLocked", "isReadonly", "autoComplete", "value", "testId", "name", "rightAddon", "large"]);
    const { onUpdatedBlur, onUpdatedFocus, isFocused } = useVariantModifier_1.default({
        onBlur,
        onFocus,
        value,
        variant: 'Input',
        isError,
        isReadonly,
    });
    const showPrefix = (lengthGtrThanZero_1.default(prefix) && lengthGtrThanZero_1.default(value)) || isFocused;
    const isFilled = value.length > 0;
    return (react_1.default.createElement(Input_components_1.InputRoot, { isFocused: isFocused && !isReadonly, isFilled: isFilled, isReadonly: isReadonly, isError: isError, isLocked: isLocked, prefix: showPrefix ? prefix : '' },
        placeholder && (react_1.default.createElement(Input_components_1.Placeholder, { isFocused: isFocused && !isReadonly, isFilled: isFilled, isLocked: isLocked, isReadonly: isReadonly, isError: isError, prefix: showPrefix ? prefix : '' }, placeholder)),
        react_1.default.createElement(Input_components_1.Input, Object.assign({ type: type, name: name, autoComplete: autoComplete, "data-testid": testId && `${testId}_input`, disabled: isReadonly, onFocus: onUpdatedFocus, onBlur: onUpdatedBlur, onChange: onChange, placeholder: placeholder, value: value, ref: ref, large: large }, rest)),
        rightAddon));
});
exports.default = InputText;
//# sourceMappingURL=Input.js.map