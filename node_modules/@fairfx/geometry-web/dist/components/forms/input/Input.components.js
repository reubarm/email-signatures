"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Input = exports.inputStyles = exports.Placeholder = exports.InputRoot = void 0;
const core_1 = require("@emotion/core");
const is_prop_valid_1 = __importDefault(require("@emotion/is-prop-valid"));
const theme_1 = __importDefault(require("../../../theme"));
const transitions_1 = __importDefault(require("../../../themer/base/transitions"));
const tokens_1 = require("../../../themer/tokens");
exports.InputRoot = theme_1.default('div', {
    shouldForwardProp: is_prop_valid_1.default,
}) `
  box-shadow: inset ${p => { var _a; return (_a = p.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.border.default; }} 0 -2px 0 0;
  background-color: ${p => { var _a; return (_a = p.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.background.default; }};
  position: relative;
  transition: all ${transitions_1.default.base};
  display: flex;
  align-items: center;
  min-height: ${tokens_1.sizes[10]}px;
  &::before {
    position: relative;
    left: 0;
    display: block;
    line-height: 1;
    content: ${p => { var _a; return (((_a = p.prefix) === null || _a === void 0 ? void 0 : _a.length) ? p.prefix : ''); }}
  }
  ${p => {
    var _a, _b;
    return p.isFocused
        ? core_1.css `
          box-shadow: inset ${(_a = p.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.border.focused} 0 -2px
            0 0;
          background-color: ${(_b = p.theme.context.colors.input) === null || _b === void 0 ? void 0 : _b.background.focused};
        `
        : '';
}}
  /* TODO: Application specific props should be extended in the application */
  ${props => props.isLocked &&
    `
          box-shadow: inset ${props.theme.palette.skyBlue[8]} 0 -2px 0 0;
        `}
  ${(props) => props.isReadonly
    ? core_1.css `
          box-shadow: none;
        `
    : ''}
  ${p => {
    var _a, _b;
    return p.isError
        ? core_1.css `
          box-shadow: inset ${(_a = p.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.border.error} 0 -2px
            0 0;
          background-color: ${(_b = p.theme.context.colors.input) === null || _b === void 0 ? void 0 : _b.background.error};
        `
        : '';
}}
`;
exports.Placeholder = theme_1.default('span', {
    shouldForwardProp: is_prop_valid_1.default,
}) `
  transition: all ${transitions_1.default.base};
  position: absolute;
  line-height: 1;
  padding-left: ${tokens_1.spaces[4] * 2}px;
  padding-right: ${tokens_1.spaces[4] * 2}px;
  color: ${p => { var _a; return (_a = p.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.label.default; }};
  font-size: ${tokens_1.fontSizes[3]}px;
  top: ${tokens_1.spaces[4] * 2 + tokens_1.fontSizes[2] / 2}px;
  font-weight: ${tokens_1.weight.font.semi.value};
  ${p => {
    var _a, _b;
    return p.isFocused || p.isFilled
        ? core_1.css `
          font-size: ${tokens_1.fontSizes[1]}px;
          top: 10px;
          font-weight: bold;
          color: ${p.isFilled
            ? (_a = p.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.label.default : (_b = p.theme.context.colors.input) === null || _b === void 0 ? void 0 : _b.label.focused};
        `
        : '';
}}
  ${p => {
    var _a;
    return p.isError
        ? core_1.css `
          color: ${(_a = p.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.label.error};
        `
        : '';
}}
`;
// TODO: We can't type theme yet, it will work with emotion 11
exports.inputStyles = props => {
    var _a;
    return core_1.css `
  border: none;
  background-color: transparent;
  outline: none;
  width: 100%;
  font-size: ${tokens_1.fontSizes[3]}px;
  display: block;
  color: ${(_a = props.theme.context.colors.input) === null || _a === void 0 ? void 0 : _a.outerLabel.default};
  position: relative;
  line-height: ${tokens_1.line_height.font.body.value};
  margin-top: ${tokens_1.spaces[4] * 3}px;
  padding: 0 ${tokens_1.spaces[4] * 2}px ${tokens_1.spaces[4] * 2}px;
  min-height: calc(${tokens_1.sizes[10]}px - ${tokens_1.spaces[4] * 3}px);
  &[type='number']::-webkit-inner-spin-button {
    appearance: none;
    margin: 0;
  }
  &[type='number']::-webkit-outer-spin-button {
    appearance: none;
    margin: 0;
  }
  &::placeholder {
    opacity: 0;
  }
`;
};
exports.Input = theme_1.default.input `
  ${exports.inputStyles}
  font-size: ${props => (props.large ? tokens_1.fontSizes[7] : tokens_1.fontSizes[3])}px;
  font-weight: ${props => (props.large ? 900 : 500)};
`;
//# sourceMappingURL=Input.components.js.map