/// <reference types="react" />
import { sizes, spaces } from '../../theme/tokens';
export interface PrimitiveModalRefs {
    open: boolean;
    handleClose: () => void;
    handleOpen: () => void;
    toggleOpen: () => void;
    setOpen: (state: boolean) => void;
}
export interface PrimitiveModalProps extends Partial<ModalRootProps>, Partial<BackdropProps> {
    closeButtonVisible?: boolean;
    handleEscape?: boolean;
    open?: boolean;
    children?: React.ReactNode;
    onClose?: () => void;
    onOpen?: () => void;
}
export interface ModalRootProps {
    padding: keyof typeof spaces;
    minWidth: keyof typeof sizes;
    minHeight: keyof typeof sizes;
    overflow?: 'string';
}
export declare type CloseButtonWrapperProps = Omit<ModalRootProps, 'minWidth' | 'minHeight' | 'overflow'>;
export interface BackdropProps {
    backdropVisible: boolean;
}
export declare type SSRDiv = HTMLDivElement | undefined;
export declare type SSRElement = HTMLElement | null;
interface ModalButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
    label: string;
}
export interface ActionModalProps extends PrimitiveModalProps {
    title?: string;
    primary?: ModalButtonProps;
    secondary?: ModalButtonProps;
}
export {};
