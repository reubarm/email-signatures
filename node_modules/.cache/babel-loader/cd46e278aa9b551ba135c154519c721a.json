{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PasswordPanel = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar Tick_1 = __importDefault(require(\"../../icons/Tick\"));\n\nvar useVariantModifier_1 = __importDefault(require(\"../shared/useVariantModifier\"));\n\nvar PasswordPanel_components_1 = require(\"./PasswordPanel.components\");\n\nvar minPasswordLengthDefault = 8;\n\nvar hasLowerCase = function hasLowerCase(str) {\n  return /[a-z]/.test(str);\n};\n\nvar hasUpperCase = function hasUpperCase(str) {\n  return /[A-Z]/.test(str);\n};\n\nvar hasNumber = function hasNumber(str) {\n  return /[0-9]/.test(str);\n};\n\nvar hasGoodLength = function hasGoodLength(str, length) {\n  return str.length >= length ? 1 : 0;\n};\n\nvar noop = function noop() {};\n\nexports.PasswordPanel = function (_ref) {\n  var _ref$password = _ref.password,\n      password = _ref$password === void 0 ? '' : _ref$password,\n      _ref$minPasswordLengt = _ref.minPasswordLength,\n      minPasswordLength = _ref$minPasswordLengt === void 0 ? minPasswordLengthDefault : _ref$minPasswordLengt,\n      _ref$onFocus = _ref.onFocus,\n      onFocus = _ref$onFocus === void 0 ? noop : _ref$onFocus,\n      _ref$onBlur = _ref.onBlur,\n      onBlur = _ref$onBlur === void 0 ? noop : _ref$onBlur,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$isReadonly = _ref.isReadonly,\n      isReadonly = _ref$isReadonly === void 0 ? false : _ref$isReadonly,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value,\n      _ref$isError = _ref.isError,\n      isError = _ref$isError === void 0 ? false : _ref$isError;\n  useVariantModifier_1.default({\n    onBlur: onBlur,\n    onFocus: onFocus,\n    value: value,\n    variant: 'Input',\n    isError: isError,\n    isReadonly: isReadonly\n  });\n  onChange(!!hasGoodLength(password, minPasswordLength) && !!hasNumber(password) && !!hasLowerCase(password) && !!hasUpperCase(password));\n  return react_1.default.createElement(PasswordPanel_components_1.PasswordPanelRoot, null, react_1.default.createElement(PasswordPanel_components_1.Title, null, \"Your password must have\"), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasGoodLength(password, minPasswordLength) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: !!hasGoodLength(password, minPasswordLength)\n  }, minPasswordLength, \" or more characters\")), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasNumber(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: hasNumber(password)\n  }, \"Number\")), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasLowerCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: hasLowerCase(password)\n  }, \"Lower case letters\")), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasUpperCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: hasUpperCase(password)\n  }, \"Upper case letters\")));\n};\n\nexports.default = exports.PasswordPanel;","map":{"version":3,"sources":["../../../../src/components/forms/PasswordPanel/PasswordPanel.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PasswordPanel = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst Tick_1 = __importDefault(require(\"../../icons/Tick\"));\nconst useVariantModifier_1 = __importDefault(require(\"../shared/useVariantModifier\"));\nconst PasswordPanel_components_1 = require(\"./PasswordPanel.components\");\nconst minPasswordLengthDefault = 8;\nconst hasLowerCase = (str) => {\n    return /[a-z]/.test(str);\n};\nconst hasUpperCase = (str) => {\n    return /[A-Z]/.test(str);\n};\nconst hasNumber = (str) => {\n    return /[0-9]/.test(str);\n};\nconst hasGoodLength = (str, length) => {\n    return str.length >= length ? 1 : 0;\n};\nconst noop = () => { };\nexports.PasswordPanel = ({ password = '', minPasswordLength = minPasswordLengthDefault, onFocus = noop, onBlur = noop, onChange = noop, isReadonly = false, value = '', isError = false, }) => {\n    useVariantModifier_1.default({\n        onBlur,\n        onFocus,\n        value,\n        variant: 'Input',\n        isError,\n        isReadonly,\n    });\n    onChange(!!hasGoodLength(password, minPasswordLength) &&\n        !!hasNumber(password) &&\n        !!hasLowerCase(password) &&\n        !!hasUpperCase(password));\n    return (react_1.default.createElement(PasswordPanel_components_1.PasswordPanelRoot, null,\n        react_1.default.createElement(PasswordPanel_components_1.Title, null, \"Your password must have\"),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasGoodLength(password, minPasswordLength) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: !!hasGoodLength(password, minPasswordLength) },\n                minPasswordLength,\n                \" or more characters\")),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasNumber(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasNumber(password) }, \"Number\")),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasLowerCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasLowerCase(password) }, \"Lower case letters\")),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasUpperCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasUpperCase(password) }, \"Upper case letters\"))));\n};\nexports.default = exports.PasswordPanel;\n//# sourceMappingURL=PasswordPanel.js.map"]},"metadata":{},"sourceType":"script"}