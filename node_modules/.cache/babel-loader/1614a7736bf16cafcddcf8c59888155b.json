{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PasswordPanel = void 0;\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst Tick_1 = __importDefault(require(\"../../icons/Tick\"));\n\nconst useVariantModifier_1 = __importDefault(require(\"../shared/useVariantModifier\"));\n\nconst PasswordPanel_components_1 = require(\"./PasswordPanel.components\");\n\nconst minPasswordLengthDefault = 8;\n\nconst hasLowerCase = str => {\n  return /[a-z]/.test(str);\n};\n\nconst hasUpperCase = str => {\n  return /[A-Z]/.test(str);\n};\n\nconst hasNumber = str => {\n  return /[0-9]/.test(str);\n};\n\nconst hasGoodLength = (str, length) => {\n  return str.length >= length ? 1 : 0;\n};\n\nconst noop = () => {};\n\nexports.PasswordPanel = ({\n  password = '',\n  minPasswordLength = minPasswordLengthDefault,\n  onFocus = noop,\n  onBlur = noop,\n  onChange = noop,\n  isReadonly = false,\n  value = '',\n  isError = false\n}) => {\n  useVariantModifier_1.default({\n    onBlur,\n    onFocus,\n    value,\n    variant: 'Input',\n    isError,\n    isReadonly\n  });\n  onChange(!!hasGoodLength(password, minPasswordLength) && !!hasNumber(password) && !!hasLowerCase(password) && !!hasUpperCase(password));\n  return react_1.default.createElement(PasswordPanel_components_1.PasswordPanelRoot, null, react_1.default.createElement(PasswordPanel_components_1.Title, null, \"Your password must have\"), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasGoodLength(password, minPasswordLength) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: !!hasGoodLength(password, minPasswordLength)\n  }, minPasswordLength, \" or more characters\")), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasNumber(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: hasNumber(password)\n  }, \"Number\")), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasLowerCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: hasLowerCase(password)\n  }, \"Lower case letters\")), react_1.default.createElement(PasswordPanel_components_1.Criteria, null, react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasUpperCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)), react_1.default.createElement(PasswordPanel_components_1.Text, {\n    isChecked: hasUpperCase(password)\n  }, \"Upper case letters\")));\n};\n\nexports.default = exports.PasswordPanel;","map":{"version":3,"sources":["../../../../src/components/forms/PasswordPanel/PasswordPanel.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PasswordPanel = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst Tick_1 = __importDefault(require(\"../../icons/Tick\"));\nconst useVariantModifier_1 = __importDefault(require(\"../shared/useVariantModifier\"));\nconst PasswordPanel_components_1 = require(\"./PasswordPanel.components\");\nconst minPasswordLengthDefault = 8;\nconst hasLowerCase = (str) => {\n    return /[a-z]/.test(str);\n};\nconst hasUpperCase = (str) => {\n    return /[A-Z]/.test(str);\n};\nconst hasNumber = (str) => {\n    return /[0-9]/.test(str);\n};\nconst hasGoodLength = (str, length) => {\n    return str.length >= length ? 1 : 0;\n};\nconst noop = () => { };\nexports.PasswordPanel = ({ password = '', minPasswordLength = minPasswordLengthDefault, onFocus = noop, onBlur = noop, onChange = noop, isReadonly = false, value = '', isError = false, }) => {\n    useVariantModifier_1.default({\n        onBlur,\n        onFocus,\n        value,\n        variant: 'Input',\n        isError,\n        isReadonly,\n    });\n    onChange(!!hasGoodLength(password, minPasswordLength) &&\n        !!hasNumber(password) &&\n        !!hasLowerCase(password) &&\n        !!hasUpperCase(password));\n    return (react_1.default.createElement(PasswordPanel_components_1.PasswordPanelRoot, null,\n        react_1.default.createElement(PasswordPanel_components_1.Title, null, \"Your password must have\"),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasGoodLength(password, minPasswordLength) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: !!hasGoodLength(password, minPasswordLength) },\n                minPasswordLength,\n                \" or more characters\")),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasNumber(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasNumber(password) }, \"Number\")),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasLowerCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasLowerCase(password) }, \"Lower case letters\")),\n        react_1.default.createElement(PasswordPanel_components_1.Criteria, null,\n            react_1.default.createElement(PasswordPanel_components_1.Icon, null, hasUpperCase(password) ? react_1.default.createElement(Tick_1.default, null) : react_1.default.createElement(PasswordPanel_components_1.Line, null)),\n            react_1.default.createElement(PasswordPanel_components_1.Text, { isChecked: hasUpperCase(password) }, \"Upper case letters\"))));\n};\nexports.default = exports.PasswordPanel;\n//# sourceMappingURL=PasswordPanel.js.map"]},"metadata":{},"sourceType":"script"}