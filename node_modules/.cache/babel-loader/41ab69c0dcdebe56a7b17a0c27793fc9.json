{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TooltipContent = exports.TooltipRoot = exports.Text = void 0;\n\nconst core_1 = require(\"@emotion/core\");\n\nconst theme_1 = __importDefault(require(\"../../theme\"));\n\nconst tokens_1 = require(\"../../themer/tokens\");\n\nconst TooltipContentStyles = props => core_1.css`\n  border-style: solid;\n  border-color: ${props.theme.palette.midnightBlue[0]} transparent transparent\n    transparent;\n  border-width: ${tokens_1.spaces[5]}px ${tokens_1.spaces[5]}px 0 ${tokens_1.spaces[5]}px;\n  content: ' ';\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n  top: 89%;\n`;\n\nexports.Text = theme_1.default.span`\n  box-sizing: border-box;\n  overflow: hidden;\n  padding: ${tokens_1.spaces[4]}px ${tokens_1.spaces[7]}px;\n  font-weight: bold;\n  font-size: ${tokens_1.fontSizes[1]}px;\n  color: ${p => p.theme.palette.white[0]};\n  user-select: none;\n  border-radius: ${tokens_1.spaces[2]}px;\n  display: inline-block;\n  background-color: ${p => p.theme.palette.midnightBlue[0]};\n`;\nexports.TooltipRoot = theme_1.default('div')`\n  position: relative;\n  display: inline-block;\n`;\nexports.TooltipContent = theme_1.default.div`\n  position: absolute;\n  text-align: left;\n  z-index: ${tokens_1.indices.tooltip};\n  bottom: calc(100% + 10px);\n  white-space: pre-wrap;\n  /**Centre alignment */\n  width: 300px; /**Some really big number that we won't realistically hit but it gets all widths in absolute the same */\n  left: -150px; /**Centre the width */\n  margin-left: 50%;\n  text-align: center;\n\n  ${props => props.align === 'center' ? core_1.css`\n          &:before {\n            left: 50%;\n            margin-left: -${tokens_1.spaces[5]}px;\n            ${TooltipContentStyles(props)}\n          }\n        ` : core_1.css`\n          width: 0;\n          left: 0;\n          margin-left: 0;\n          text-align: left;\n\n          &:before {\n            margin-left: ${tokens_1.spaces[5]}px;\n            ${TooltipContentStyles(props)}\n          }\n        `}\n`;","map":{"version":3,"sources":["../../../src/components/tooltip/Tooltip.components.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAQA,MAAM,oBAAoB,GAAG,KAAK,IAAI,MAAA,CAAA,GAAG;;kBAEvB,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,YAApB,CAAiC,CAAjC,CAAmC;;kBAEnC,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS,MAAM,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS,QAAQ,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS;;;;;;;AAO1D,CAXD;;AAaa,OAAA,CAAA,IAAA,GAAO,OAAA,CAAA,OAAA,CAAO,IAAI;;;aAGlB,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS,MAAM,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS;;eAEtB,QAAA,CAAA,SAAA,CAAU,CAAV,CAAY;WAChB,CAAC,IAAI,CAAC,CAAC,KAAF,CAAQ,OAAR,CAAgB,KAAhB,CAAsB,CAAtB,CAAwB;;mBAErB,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS;;sBAEN,CAAC,IAAI,CAAC,CAAC,KAAF,CAAQ,OAAR,CAAgB,YAAhB,CAA6B,CAA7B,CAA+B;AACzD,CAXY;AAaA,OAAA,CAAA,WAAA,GAAc,OAAA,CAAA,OAAA,CAAO,KAAP,CAAa;;;AAGvC,CAHY;AAKA,OAAA,CAAA,cAAA,GAAiB,OAAA,CAAA,OAAA,CAAO,GAAiB;;;aAGzC,QAAA,CAAA,OAAA,CAAQ,OAAO;;;;;;;;;IASxB,KAAK,IACL,KAAK,CAAC,KAAN,KAAgB,QAAhB,GACI,MAAA,CAAA,GAAG;;;4BAGiB,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS;cACvB,oBAAoB,CAAC,KAAD,CAAO;;AAEhC,SAPL,GAQI,MAAA,CAAA,GAAG;;;;;;;2BAOgB,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS;cACtB,oBAAoB,CAAC,KAAD,CAAO;;AAEhC,SAAA;AACR,CAhCY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TooltipContent = exports.TooltipRoot = exports.Text = void 0;\nconst core_1 = require(\"@emotion/core\");\nconst theme_1 = __importDefault(require(\"../../theme\"));\nconst tokens_1 = require(\"../../themer/tokens\");\nconst TooltipContentStyles = props => core_1.css `\n  border-style: solid;\n  border-color: ${props.theme.palette.midnightBlue[0]} transparent transparent\n    transparent;\n  border-width: ${tokens_1.spaces[5]}px ${tokens_1.spaces[5]}px 0 ${tokens_1.spaces[5]}px;\n  content: ' ';\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n  top: 89%;\n`;\nexports.Text = theme_1.default.span `\n  box-sizing: border-box;\n  overflow: hidden;\n  padding: ${tokens_1.spaces[4]}px ${tokens_1.spaces[7]}px;\n  font-weight: bold;\n  font-size: ${tokens_1.fontSizes[1]}px;\n  color: ${p => p.theme.palette.white[0]};\n  user-select: none;\n  border-radius: ${tokens_1.spaces[2]}px;\n  display: inline-block;\n  background-color: ${p => p.theme.palette.midnightBlue[0]};\n`;\nexports.TooltipRoot = theme_1.default('div') `\n  position: relative;\n  display: inline-block;\n`;\nexports.TooltipContent = theme_1.default.div `\n  position: absolute;\n  text-align: left;\n  z-index: ${tokens_1.indices.tooltip};\n  bottom: calc(100% + 10px);\n  white-space: pre-wrap;\n  /**Centre alignment */\n  width: 300px; /**Some really big number that we won't realistically hit but it gets all widths in absolute the same */\n  left: -150px; /**Centre the width */\n  margin-left: 50%;\n  text-align: center;\n\n  ${props => props.align === 'center'\n    ? core_1.css `\n          &:before {\n            left: 50%;\n            margin-left: -${tokens_1.spaces[5]}px;\n            ${TooltipContentStyles(props)}\n          }\n        `\n    : core_1.css `\n          width: 0;\n          left: 0;\n          margin-left: 0;\n          text-align: left;\n\n          &:before {\n            margin-left: ${tokens_1.spaces[5]}px;\n            ${TooltipContentStyles(props)}\n          }\n        `}\n`;\n//# sourceMappingURL=Tooltip.components.js.map"]},"metadata":{},"sourceType":"script"}