{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageContainer = void 0;\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst theme_1 = __importDefault(require(\"../../theme\"));\n\nconst tokens_1 = require(\"../../themer/tokens\");\n\nconst Text_1 = __importDefault(require(\"../typography/Text\"));\n\nconst checkType = type => {\n  if (type === 'success') {\n    return tokens_1.color.green.base.value;\n  }\n\n  if (type === 'error') {\n    return tokens_1.color.danger.base.value;\n  }\n\n  return 'transparent';\n};\n\nexports.MessageContainer = theme_1.default.div`\n  border-radius: ${tokens_1.spaces[2]}px;\n  cursor: pointer;\n  text-align: left;\n  width: 464px;\n  padding: ${tokens_1.spaces[5]}px;\n  background: ${props => checkType(props.type)};\n`;\n\nconst noop = () => {};\n\nconst ToastMessage = ({\n  message,\n  type,\n  renderMessage = text => text,\n  onDismiss = noop\n}) => {\n  react_1.default.useEffect(() => () => onDismiss(), []);\n  const msg = renderMessage(react_1.default.createElement(Text_1.default, {\n    color: \"light\",\n    \"data-testid\": \"toastMessage_text\",\n    fontSize: \"small\"\n  }, message));\n  return type !== null ? react_1.default.createElement(exports.MessageContainer, {\n    type: type\n  }, msg) : null;\n};\n\nexports.default = ToastMessage;","map":{"version":3,"sources":["../../../src/components/InteractiveToast/ToastMessage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AAOA,MAAM,SAAS,GAAG,IAAI,IAAG;AACvB,MAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,WAAO,QAAA,CAAA,KAAA,CAAM,KAAN,CAAY,IAAZ,CAAiB,KAAxB;AACD;;AACD,MAAI,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAO,QAAA,CAAA,KAAA,CAAM,MAAN,CAAa,IAAb,CAAkB,KAAzB;AACD;;AACD,SAAO,aAAP;AACD,CARD;;AAUa,OAAA,CAAA,gBAAA,GAAmB,OAAA,CAAA,OAAA,CAAO,GAA0B;mBAC9C,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS;;;;aAIf,QAAA,CAAA,MAAA,CAAO,CAAP,CAAS;gBACN,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,IAAP,CAAY;AAC7C,CAPY;;AASb,MAAM,IAAI,GAAG,MAAK,CAAG,CAArB;;AACA,MAAM,YAAY,GAAG,CAAC;AACpB,EAAA,OADoB;AAEpB,EAAA,IAFoB;AAGpB,EAAA,aAAa,GAAG,IAAI,IAAI,IAHJ;AAIpB,EAAA,SAAS,GAAG;AAJQ,CAAD,KAKG;AACtB,EAAA,OAAA,CAAA,OAAA,CAAM,SAAN,CAAgB,MAAM,MAAM,SAAS,EAArC,EAAyC,EAAzC;AAEA,QAAM,GAAG,GAAG,aAAa,CACvB,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,OAAD,EAAK;AAAC,IAAA,KAAK,EAAC,OAAP;AAAc,mBAAa,mBAA3B;AAA+C,IAAA,QAAQ,EAAC;AAAxD,GAAL,EACG,OADH,CADuB,CAAzB;AAKA,SAAO,IAAI,KAAK,IAAT,GACL,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAA,gBAAD,EAAiB;AAAC,IAAA,IAAI,EAAE;AAAP,GAAjB,EAA+B,GAA/B,CADK,GAEH,IAFJ;AAGD,CAhBD;;AAkBA,OAAA,CAAA,OAAA,GAAe,YAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageContainer = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst theme_1 = __importDefault(require(\"../../theme\"));\nconst tokens_1 = require(\"../../themer/tokens\");\nconst Text_1 = __importDefault(require(\"../typography/Text\"));\nconst checkType = type => {\n    if (type === 'success') {\n        return tokens_1.color.green.base.value;\n    }\n    if (type === 'error') {\n        return tokens_1.color.danger.base.value;\n    }\n    return 'transparent';\n};\nexports.MessageContainer = theme_1.default.div `\n  border-radius: ${tokens_1.spaces[2]}px;\n  cursor: pointer;\n  text-align: left;\n  width: 464px;\n  padding: ${tokens_1.spaces[5]}px;\n  background: ${props => checkType(props.type)};\n`;\nconst noop = () => { };\nconst ToastMessage = ({ message, type, renderMessage = text => text, onDismiss = noop, }) => {\n    react_1.default.useEffect(() => () => onDismiss(), []);\n    const msg = renderMessage(react_1.default.createElement(Text_1.default, { color: \"light\", \"data-testid\": \"toastMessage_text\", fontSize: \"small\" }, message));\n    return type !== null ? (react_1.default.createElement(exports.MessageContainer, { type: type }, msg)) : null;\n};\nexports.default = ToastMessage;\n//# sourceMappingURL=ToastMessage.js.map"]},"metadata":{},"sourceType":"script"}