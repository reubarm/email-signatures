{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/reubarm/Downloads/email-signatures/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatNumber = void 0;\n\nexports.formatNumber = function (value) {\n  if (!value) return '';\n\n  var _value$replace$split = value.replace(/,/g, '').split('.'),\n      _value$replace$split2 = _slicedToArray(_value$replace$split, 2),\n      intNumber = _value$replace$split2[0],\n      decimals = _value$replace$split2[1];\n\n  var regex = /^[0-9]*$/;\n  var formattedNumber = '';\n\n  if (intNumber.match(regex)) {\n    for (var i = 0; i < intNumber.length; i++) {\n      formattedNumber += intNumber[i]; // add a comma on every 3rd digit\n\n      if ((intNumber.length - i) % 3 === 1) {\n        formattedNumber += ',';\n      }\n    } // remove the , at the end\n\n\n    formattedNumber = formattedNumber.slice(0, -1); // if decimal points exist add them\n\n    if (decimals !== undefined) {\n      formattedNumber += \".\".concat(decimals);\n    }\n  }\n\n  return formattedNumber;\n};","map":{"version":3,"sources":["../../../src/utils/formatNumber/formatNumber.ts"],"names":[],"mappings":";;;;;;;;;AAAa,OAAA,CAAA,YAAA,GAAe,UAAC,KAAD,EAA0B;AACpD,MAAI,CAAC,KAAL,EAAY,OAAO,EAAP;;AACZ,6BAA8B,KAAK,CAAC,OAAN,CAAc,IAAd,EAAoB,EAApB,EAAwB,KAAxB,CAA8B,GAA9B,CAA9B;AAAA;AAAA,MAAO,SAAP;AAAA,MAAkB,QAAlB;;AACA,MAAM,KAAK,GAAG,UAAd;AACA,MAAI,eAAe,GAAG,EAAtB;;AAEA,MAAI,SAAS,CAAC,KAAV,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AACzC,MAAA,eAAe,IAAI,SAAS,CAAC,CAAD,CAA5B,CADyC,CAEzC;;AACA,UAAI,CAAC,SAAS,CAAC,MAAV,GAAmB,CAApB,IAAyB,CAAzB,KAA+B,CAAnC,EAAsC;AACpC,QAAA,eAAe,IAAI,GAAnB;AACD;AACF,KAPyB,CAS1B;;;AACA,IAAA,eAAe,GAAG,eAAe,CAAC,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAlB,CAV0B,CAY1B;;AACA,QAAI,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,MAAA,eAAe,eAAQ,QAAR,CAAf;AACD;AACF;;AAED,SAAO,eAAP;AACD,CAzBY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatNumber = void 0;\nexports.formatNumber = (value) => {\n    if (!value)\n        return '';\n    const [intNumber, decimals] = value.replace(/,/g, '').split('.');\n    const regex = /^[0-9]*$/;\n    let formattedNumber = '';\n    if (intNumber.match(regex)) {\n        for (let i = 0; i < intNumber.length; i++) {\n            formattedNumber += intNumber[i];\n            // add a comma on every 3rd digit\n            if ((intNumber.length - i) % 3 === 1) {\n                formattedNumber += ',';\n            }\n        }\n        // remove the , at the end\n        formattedNumber = formattedNumber.slice(0, -1);\n        // if decimal points exist add them\n        if (decimals !== undefined) {\n            formattedNumber += `.${decimals}`;\n        }\n    }\n    return formattedNumber;\n};\n//# sourceMappingURL=formatNumber.js.map"]},"metadata":{},"sourceType":"script"}