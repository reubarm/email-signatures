{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/reubarm/Downloads/email-signatures/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TooltipContent = exports.TooltipRoot = exports.Text = void 0;\n\nvar core_1 = require(\"@emotion/core\");\n\nvar theme_1 = __importDefault(require(\"../../theme\"));\n\nvar tokens_1 = require(\"../../themer/tokens\");\n\nvar TooltipContentStyles = function TooltipContentStyles(props) {\n  return core_1.css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  border-style: solid;\\n  border-color: \", \" transparent transparent\\n    transparent;\\n  border-width: \", \"px \", \"px 0 \", \"px;\\n  content: ' ';\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n  top: 89%;\\n\"])), props.theme.palette.midnightBlue[0], tokens_1.spaces[5], tokens_1.spaces[5], tokens_1.spaces[5]);\n};\n\nexports.Text = theme_1.default.span(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  box-sizing: border-box;\\n  overflow: hidden;\\n  padding: \", \"px \", \"px;\\n  font-weight: bold;\\n  font-size: \", \"px;\\n  color: \", \";\\n  user-select: none;\\n  border-radius: \", \"px;\\n  display: inline-block;\\n  background-color: \", \";\\n\"])), tokens_1.spaces[4], tokens_1.spaces[7], tokens_1.fontSizes[1], function (p) {\n  return p.theme.palette.white[0];\n}, tokens_1.spaces[2], function (p) {\n  return p.theme.palette.midnightBlue[0];\n});\nexports.TooltipRoot = theme_1.default('div')(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-block;\\n\"])));\nexports.TooltipContent = theme_1.default.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  text-align: left;\\n  z-index: \", \";\\n  bottom: calc(100% + 10px);\\n  white-space: pre-wrap;\\n  /**Centre alignment */\\n  width: 300px; /**Some really big number that we won't realistically hit but it gets all widths in absolute the same */\\n  left: -150px; /**Centre the width */\\n  margin-left: 50%;\\n  text-align: center;\\n\\n  \", \"\\n\"])), tokens_1.indices.tooltip, function (props) {\n  return props.align === 'center' ? core_1.css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n          &:before {\\n            left: 50%;\\n            margin-left: -\", \"px;\\n            \", \"\\n          }\\n        \"])), tokens_1.spaces[5], TooltipContentStyles(props)) : core_1.css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n          width: 0;\\n          left: 0;\\n          margin-left: 0;\\n          text-align: left;\\n\\n          &:before {\\n            margin-left: \", \"px;\\n            \", \"\\n          }\\n        \"])), tokens_1.spaces[5], TooltipContentStyles(props));\n});","map":{"version":3,"sources":["../../../src/components/tooltip/Tooltip.components.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAQA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAA,KAAK;AAAA,SAAI,MAAA,CAAA,GAAJ,kTAEhB,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,YAApB,CAAiC,CAAjC,CAFgB,EAIhB,QAAA,CAAA,MAAA,CAAO,CAAP,CAJgB,EAID,QAAA,CAAA,MAAA,CAAO,CAAP,CAJC,EAIgB,QAAA,CAAA,MAAA,CAAO,CAAP,CAJhB;AAAA,CAAlC;;AAaa,OAAA,CAAA,IAAA,GAAO,OAAA,CAAA,OAAA,CAAO,IAAd,sTAGA,QAAA,CAAA,MAAA,CAAO,CAAP,CAHA,EAGe,QAAA,CAAA,MAAA,CAAO,CAAP,CAHf,EAKE,QAAA,CAAA,SAAA,CAAU,CAAV,CALF,EAMF,UAAA,CAAC;AAAA,SAAI,CAAC,CAAC,KAAF,CAAQ,OAAR,CAAgB,KAAhB,CAAsB,CAAtB,CAAJ;AAAA,CANC,EAQM,QAAA,CAAA,MAAA,CAAO,CAAP,CARN,EAUS,UAAA,CAAC;AAAA,SAAI,CAAC,CAAC,KAAF,CAAQ,OAAR,CAAgB,YAAhB,CAA6B,CAA7B,CAAJ;AAAA,CAVV;AAaA,OAAA,CAAA,WAAA,GAAc,OAAA,CAAA,OAAA,CAAO,KAAP,CAAd;AAKA,OAAA,CAAA,cAAA,GAAiB,OAAA,CAAA,OAAA,CAAO,GAAxB,kbAGA,QAAA,CAAA,OAAA,CAAQ,OAHR,EAYT,UAAA,KAAK;AAAA,SACL,KAAK,CAAC,KAAN,KAAgB,QAAhB,GACI,MAAA,CAAA,GADJ,kMAIwB,QAAA,CAAA,MAAA,CAAO,CAAP,CAJxB,EAKU,oBAAoB,CAAC,KAAD,CAL9B,IAQI,MAAA,CAAA,GARJ,4QAeuB,QAAA,CAAA,MAAA,CAAO,CAAP,CAfvB,EAgBU,oBAAoB,CAAC,KAAD,CAhB9B,CADK;AAAA,CAZI","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TooltipContent = exports.TooltipRoot = exports.Text = void 0;\nconst core_1 = require(\"@emotion/core\");\nconst theme_1 = __importDefault(require(\"../../theme\"));\nconst tokens_1 = require(\"../../themer/tokens\");\nconst TooltipContentStyles = props => core_1.css `\n  border-style: solid;\n  border-color: ${props.theme.palette.midnightBlue[0]} transparent transparent\n    transparent;\n  border-width: ${tokens_1.spaces[5]}px ${tokens_1.spaces[5]}px 0 ${tokens_1.spaces[5]}px;\n  content: ' ';\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n  top: 89%;\n`;\nexports.Text = theme_1.default.span `\n  box-sizing: border-box;\n  overflow: hidden;\n  padding: ${tokens_1.spaces[4]}px ${tokens_1.spaces[7]}px;\n  font-weight: bold;\n  font-size: ${tokens_1.fontSizes[1]}px;\n  color: ${p => p.theme.palette.white[0]};\n  user-select: none;\n  border-radius: ${tokens_1.spaces[2]}px;\n  display: inline-block;\n  background-color: ${p => p.theme.palette.midnightBlue[0]};\n`;\nexports.TooltipRoot = theme_1.default('div') `\n  position: relative;\n  display: inline-block;\n`;\nexports.TooltipContent = theme_1.default.div `\n  position: absolute;\n  text-align: left;\n  z-index: ${tokens_1.indices.tooltip};\n  bottom: calc(100% + 10px);\n  white-space: pre-wrap;\n  /**Centre alignment */\n  width: 300px; /**Some really big number that we won't realistically hit but it gets all widths in absolute the same */\n  left: -150px; /**Centre the width */\n  margin-left: 50%;\n  text-align: center;\n\n  ${props => props.align === 'center'\n    ? core_1.css `\n          &:before {\n            left: 50%;\n            margin-left: -${tokens_1.spaces[5]}px;\n            ${TooltipContentStyles(props)}\n          }\n        `\n    : core_1.css `\n          width: 0;\n          left: 0;\n          margin-left: 0;\n          text-align: left;\n\n          &:before {\n            margin-left: ${tokens_1.spaces[5]}px;\n            ${TooltipContentStyles(props)}\n          }\n        `}\n`;\n//# sourceMappingURL=Tooltip.components.js.map"]},"metadata":{},"sourceType":"script"}