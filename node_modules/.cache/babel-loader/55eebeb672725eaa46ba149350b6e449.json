{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/reubarm/Downloads/email-signatures/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SupportedModes = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar IconExit_1 = __importDefault(require(\"../icons/IconExit\"));\n\nvar ToastManager_1 = require(\"../toast-manager/ToastManager\");\n\nvar InspectorPanel_components_1 = require(\"./InspectorPanel.components\");\n\nvar noop = function noop() {};\n\nvar SupportedModes;\n\n(function (SupportedModes) {\n  SupportedModes[SupportedModes[\"CLOSED\"] = 0] = \"CLOSED\";\n  SupportedModes[SupportedModes[\"OPENED\"] = 1] = \"OPENED\";\n})(SupportedModes = exports.SupportedModes || (exports.SupportedModes = {}));\n\nvar InspectorPanel = function InspectorPanel(_ref) {\n  var _SupportedModes$CLOSE;\n\n  var title = _ref.title,\n      id = _ref.id,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? SupportedModes.CLOSED : _ref$mode,\n      customWidth = _ref.customWidth,\n      _ref$fullHeight = _ref.fullHeight,\n      fullHeight = _ref$fullHeight === void 0 ? false : _ref$fullHeight,\n      children = _ref.children,\n      actions = _ref.actions,\n      _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? noop : _ref$onClose;\n  var inspectorMode = (_SupportedModes$CLOSE = {}, _defineProperty(_SupportedModes$CLOSE, SupportedModes.CLOSED, 'closed'), _defineProperty(_SupportedModes$CLOSE, SupportedModes.OPENED, 'opened'), _SupportedModes$CLOSE)[mode];\n\n  var _ToastManager_1$useTo = ToastManager_1.useToasts(),\n      empty = _ToastManager_1$useTo.empty;\n\n  react_1.default.useEffect(function () {\n    empty();\n  }, [id]); // @TODO for Action. Create a component, and use in replacement of the divs that are passed in\n\n  return react_1.default.createElement(InspectorPanel_components_1.InspectorPanel, {\n    customWidth: customWidth,\n    mode: inspectorMode,\n    \"data-testid\": \"InspectorPanel\",\n    fullHeight: fullHeight\n  }, react_1.default.createElement(InspectorPanel_components_1.InspectorHeader, null, title, react_1.default.createElement(InspectorPanel_components_1.InspectorAction, {\n    onClick: onClose\n  }, react_1.default.createElement(IconExit_1.default, {\n    color: \"alt\"\n  })), actions && react_1.default.createElement(InspectorPanel_components_1.InspectorActions, null, actions.map(function (actionEl) {\n    return react_1.default.createElement(InspectorPanel_components_1.InspectorAction, Object.assign({\n      as: actionEl.type,\n      key: actionEl.key\n    }, actionEl.props, {\n      sx: {\n        variant: 'InspectorPanel.Action'\n      }\n    }));\n  }))), react_1.default.createElement(InspectorPanel_components_1.InspectorBody, null, children));\n};\n\nexports.default = InspectorPanel;","map":{"version":3,"sources":["../../../src/components/inspector-panel/InspectorPanel.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SupportedModes = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst IconExit_1 = __importDefault(require(\"../icons/IconExit\"));\nconst ToastManager_1 = require(\"../toast-manager/ToastManager\");\nconst InspectorPanel_components_1 = require(\"./InspectorPanel.components\");\nconst noop = () => { };\nvar SupportedModes;\n(function (SupportedModes) {\n    SupportedModes[SupportedModes[\"CLOSED\"] = 0] = \"CLOSED\";\n    SupportedModes[SupportedModes[\"OPENED\"] = 1] = \"OPENED\";\n})(SupportedModes = exports.SupportedModes || (exports.SupportedModes = {}));\nconst InspectorPanel = ({ title, id, mode = SupportedModes.CLOSED, customWidth, fullHeight = false, children, actions, onClose = noop, }) => {\n    const inspectorMode = {\n        [SupportedModes.CLOSED]: 'closed',\n        [SupportedModes.OPENED]: 'opened',\n    }[mode];\n    const { empty } = ToastManager_1.useToasts();\n    react_1.default.useEffect(() => {\n        empty();\n    }, [id]);\n    // @TODO for Action. Create a component, and use in replacement of the divs that are passed in\n    return (react_1.default.createElement(InspectorPanel_components_1.InspectorPanel, { customWidth: customWidth, mode: inspectorMode, \"data-testid\": \"InspectorPanel\", fullHeight: fullHeight },\n        react_1.default.createElement(InspectorPanel_components_1.InspectorHeader, null,\n            title,\n            react_1.default.createElement(InspectorPanel_components_1.InspectorAction, { onClick: onClose },\n                react_1.default.createElement(IconExit_1.default, { color: \"alt\" })),\n            actions && (react_1.default.createElement(InspectorPanel_components_1.InspectorActions, null, actions.map(actionEl => (react_1.default.createElement(InspectorPanel_components_1.InspectorAction, Object.assign({ as: actionEl.type, key: actionEl.key }, actionEl.props, { sx: { variant: 'InspectorPanel.Action' } }))))))),\n        react_1.default.createElement(InspectorPanel_components_1.InspectorBody, null, children)));\n};\nexports.default = InspectorPanel;\n//# sourceMappingURL=InspectorPanel.js.map"]},"metadata":{},"sourceType":"script"}