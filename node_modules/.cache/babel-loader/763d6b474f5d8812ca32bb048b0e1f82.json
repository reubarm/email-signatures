{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/Users/reubarm/Downloads/email-signatures/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _templateObject, _templateObject2;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@emotion/core\");\n\nvar is_prop_valid_1 = __importDefault(require(\"@emotion/is-prop-valid\"));\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar theme_1 = __importDefault(require(\"../../theme\"));\n\nvar tokens_1 = require(\"../../themer/tokens\");\n\nvar convertSize = function convertSize(key) {\n  var result = {\n    base: \"\".concat(tokens_1.sizes[7], \"px\"),\n    small: \"\".concat(tokens_1.sizes[6], \"px\"),\n    large: \"\".concat(tokens_1.sizes[8], \"px\"),\n    // TODO - move those as tokens if they are not icon specific ?\n    xLarge: '40px',\n    header: '18px',\n    fluid: '100%'\n  };\n  return result[key];\n};\n\nvar convertColor = function convertColor(key) {\n  var colors = {\n    alt: tokens_1.color.white.base.value,\n    muted: tokens_1.color.casper.base.value,\n    primary: tokens_1.color.purple.base.value,\n    brand: tokens_1.color.mango.base.value\n  };\n  return colors[key];\n}; // eslint-disable-next-line react/display-name\n\n\nvar createIcon = function createIcon(Icon) {\n  return function (_ref) {\n    var _ref$size = _ref.size,\n        size = _ref$size === void 0 ? 'base' : _ref$size,\n        className = _ref.className,\n        number = _ref.number,\n        color = _ref.color;\n    var convertedSize = convertSize(size);\n    var IconRoot = theme_1.default(Icon, {\n      shouldForwardProp: is_prop_valid_1.default\n    })(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    width: \", \";\\n    height: \", \";\\n    \", \"\\n  \"])), function (p) {\n      return p.width;\n    }, function (p) {\n      return p.height;\n    }, function (_ref2) {\n      var customColor = _ref2.customColor;\n      return customColor ? core_1.css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            > * {\\n              fill: \", \";\\n            }\\n          \"])), customColor) : '';\n    });\n    return react_1.default.createElement(IconRoot, {\n      className: className,\n      width: convertedSize,\n      height: convertedSize,\n      customColor: color ? convertColor(color) : undefined,\n      number: number\n    });\n  };\n};\n\nexports.default = createIcon;","map":{"version":3,"sources":["../../../src/components/icons/createIcon.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAkCA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,GAAD,EAAkC;AACpD,MAAM,MAAM,GAAwC;AAClD,IAAA,IAAI,YAAK,QAAA,CAAA,KAAA,CAAM,CAAN,CAAL,OAD8C;AAElD,IAAA,KAAK,YAAK,QAAA,CAAA,KAAA,CAAM,CAAN,CAAL,OAF6C;AAGlD,IAAA,KAAK,YAAK,QAAA,CAAA,KAAA,CAAM,CAAN,CAAL,OAH6C;AAIlD;AACA,IAAA,MAAM,EAAE,MAL0C;AAMlD,IAAA,MAAM,EAAE,MAN0C;AAOlD,IAAA,KAAK,EAAE;AAP2C,GAApD;AAUA,SAAO,MAAM,CAAC,GAAD,CAAb;AACD,CAZD;;AAcA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,GAAD,EAA6B;AAChD,MAAM,MAAM,GAAG;AACb,IAAA,GAAG,EAAE,QAAA,CAAA,KAAA,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,KADf;AAEb,IAAA,KAAK,EAAE,QAAA,CAAA,KAAA,CAAY,MAAZ,CAAmB,IAAnB,CAAwB,KAFlB;AAGb,IAAA,OAAO,EAAE,QAAA,CAAA,KAAA,CAAY,MAAZ,CAAmB,IAAnB,CAAwB,KAHpB;AAIb,IAAA,KAAK,EAAE,QAAA,CAAA,KAAA,CAAY,KAAZ,CAAkB,IAAlB,CAAuB;AAJjB,GAAf;AAOA,SAAO,MAAM,CAAC,GAAD,CAAb;AACD,CATD,C,CAWA;;;AACA,IAAM,UAAU,GAAe,SAAzB,UAAyB,CAAA,IAAI;AAAA,SAAI,gBAKlC;AAAA,yBAJH,IAIG;AAAA,QAJH,IAIG,0BAJI,MAIJ;AAAA,QAHH,SAGG,QAHH,SAGG;AAAA,QAFH,MAEG,QAFH,MAEG;AAAA,QADH,KACG,QADH,KACG;AACH,QAAM,aAAa,GAAG,WAAW,CAAC,IAAD,CAAjC;AACA,QAAM,QAAQ,GAAG,OAAA,CAAA,OAAA,CAAO,IAAP,EAAa;AAC5B,MAAA,iBAAiB,EAAE,eAAA,CAAA;AADS,KAAb,CAAH,yHAGH,UAAA,CAAC;AAAA,aAAI,CAAC,CAAC,KAAN;AAAA,KAHE,EAIF,UAAA,CAAC;AAAA,aAAI,CAAC,CAAC,MAAN;AAAA,KAJC,EAKV;AAAA,UAAG,WAAH,SAAG,WAAH;AAAA,aACA,WAAW,GACP,MAAA,CAAA,GADO,iJAGK,WAHL,IAMP,EAPJ;AAAA,KALU,CAAd;AAeA,WACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,MAAA,SAAS,EAAE,SADJ;AAEP,MAAA,KAAK,EAAE,aAFA;AAGP,MAAA,MAAM,EAAE,aAHD;AAIP,MAAA,WAAW,EAAE,KAAK,GAAG,YAAY,CAAC,KAAD,CAAf,GAAyB,SAJpC;AAKP,MAAA,MAAM,EAAE;AALD,KAAT,CADF;AASD,GA/BkC;AAAA,CAAnC;;AAiCA,OAAA,CAAA,OAAA,GAAe,UAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"@emotion/core\");\nconst is_prop_valid_1 = __importDefault(require(\"@emotion/is-prop-valid\"));\nconst react_1 = __importDefault(require(\"react\"));\nconst theme_1 = __importDefault(require(\"../../theme\"));\nconst tokens_1 = require(\"../../themer/tokens\");\nconst convertSize = (key) => {\n    const result = {\n        base: `${tokens_1.sizes[7]}px`,\n        small: `${tokens_1.sizes[6]}px`,\n        large: `${tokens_1.sizes[8]}px`,\n        // TODO - move those as tokens if they are not icon specific ?\n        xLarge: '40px',\n        header: '18px',\n        fluid: '100%',\n    };\n    return result[key];\n};\nconst convertColor = (key) => {\n    const colors = {\n        alt: tokens_1.color.white.base.value,\n        muted: tokens_1.color.casper.base.value,\n        primary: tokens_1.color.purple.base.value,\n        brand: tokens_1.color.mango.base.value,\n    };\n    return colors[key];\n};\n// eslint-disable-next-line react/display-name\nconst createIcon = Icon => ({ size = 'base', className, number, color, }) => {\n    const convertedSize = convertSize(size);\n    const IconRoot = theme_1.default(Icon, {\n        shouldForwardProp: is_prop_valid_1.default,\n    }) `\n    width: ${p => p.width};\n    height: ${p => p.height};\n    ${({ customColor }) => customColor\n        ? core_1.css `\n            > * {\n              fill: ${customColor};\n            }\n          `\n        : ''}\n  `;\n    return (react_1.default.createElement(IconRoot, { className: className, width: convertedSize, height: convertedSize, customColor: color ? convertColor(color) : undefined, number: number }));\n};\nexports.default = createIcon;\n//# sourceMappingURL=createIcon.js.map"]},"metadata":{},"sourceType":"script"}